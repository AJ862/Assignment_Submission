# -*- coding: utf-8 -*-
"""Day_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SXouBpc9AIlS-He7SWfbxTuTh2BbX7KI

ANSWER 1
"""

l1 = list()
for i in range(0,10):
  num = int(input())
  if num%2 == 0:
    l1.append(num)

print(l1)

"""ANSWER 2"""

List Comprehension reduces the lines of codes required to write the following kind of program.

#To write the squares of the numbers 0 to 10 
squares = list()
for i in range(0,11):
  s = i*i
  squares.append(s)

print(squares)

"""Using list comprehension, the above program can be written as--"""

squares = [i*i for i in range(0,11)]
squares

"""ANSWER 3"""

mul_dict = dict()
num = int(input())
for i in range (0,num+1):
  mul_dict[i] = i*i

mul_dict

"""ANSWER 4"""

pos = {
    "x": 0, 
    "y": 0
}
z=int(input())
c=0
while (c!=z):

    n = input()
    c=c+1
    if not n:
        break

    direction,steps=n.split()
    if direction == "UP":
        pos["y"] += int(steps)
    elif direction == "DOWN":
        pos["y"] -= int(steps)
    elif direction == "LEFT":
        pos["x"] -= int(steps)
    elif direction == "RIGHT":
        pos["x"] += int(steps)
print (int(round((pos["x"]**2 + pos["y"]**2)**0.5)))